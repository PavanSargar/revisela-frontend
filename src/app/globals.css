@import 'tailwindcss';
@import 'tw-animate-css';

/* Custom utility classes */
.hide-scrollbar {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.hide-scrollbar::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

/* Styled scrollbar - thin with primary color accent */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: #0890a8;
  border-radius: 10px;
  /* Ensure the thumb doesn't reach the very edges to maintain roundness */
  border: 2px solid transparent;
  background-clip: padding-box;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(8, 144, 168, 0.8);
  background-clip: padding-box;
}

/* Firefox scrollbar styling */
* {
  scrollbar-width: thin;
  scrollbar-color: #0890a8 #f1f1f1;
}

/* Fix for page shift when modal is open */
html {
  scrollbar-gutter: stable;
}

/* Alternative approach for browsers that don't support scrollbar-gutter */
html.modal-open {
  overflow: hidden;
  padding-right: 8px; /* Same as scrollbar width */
}

body.modal-open {
  overflow: hidden;
}

html.dropdown-open,
body.dropdown-open {
  overflow: hidden;
  padding-right: var(--scrollbar-width, 0px);
}

/* Dropdown animations */
@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideRightAndFade {
  from {
    opacity: 0;
    transform: translateX(-2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Add cursor pointer to interactive elements */
button:not([disabled]),
[role='button']:not([disabled]),
a:not([disabled]),
.clickable {
  cursor: pointer;
}

button[disabled],
[role='button'][disabled],
a[disabled],
.disabled {
  cursor: not-allowed;
}
